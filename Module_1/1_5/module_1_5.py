#Практическое задание по теме: "Неизменяемые и изменяемые объекты. Кортежи"
# Цель:
# Написать программу на языке Python, используя Pycharm, для работы с неизменяемыми и изменяемыми объектами.
#
# 1. В проекте, где вы решаете домашние задания, создайте модуль 'module_1_5.py' и напишите весь код в нём.
#
# 2. Задайте переменные разных типов данных:
#   - Создайте переменную immutable_var и присвойте ей кортеж из нескольких элементов разных типов данных.
#   - Выполните операции вывода кортежа immutable_var на экран.
#
# 3. Изменение значений переменных:
#   - Попытайтесь изменить элементы кортежа immutable_var. Объясните, почему нельзя изменить значения элементов кортежа.
#
# 4. Создание изменяемых структур данных:
#   - Создайте переменную mutable_list и присвойте ей список из нескольких элементов.
#   - Измените элементы списка mutable_list.
#   - Выведите на экран измененный список mutable_list.
#
# Примечания:
# - Для вывода значений на экран используйте функцию print().
# - Обратите внимание на особенности изменяемых и неизменяемых объектов в Python.

print()
immutable_var = 1, 2, False, "something", 1.2, [1, 2, 3, 4]                     #   - Создайте переменную immutable_var и присвойте ей кортеж из нескольких элементов разных типов данных.
print(immutable_var)                                                            #   - Выполните операции вывода кортежа immutable_var на экран.
#immutable_var [2] = True                                                       # Затрагивает неизменяемый элемент из списка за №3 "False" - не изменить
immutable_var [5][2] = "Modified"                                               # Затрагивает изменяемый элемент из списка 6 - подсписок 3 элемент "3"
print(immutable_var)                                                            #   - Попытайтесь изменить элементы кортежа immutable_var

print("")

mutable_list = ["Just to be sure that is first element", 2, True, 12.3]         #   - Создайте переменную mutable_list и присвойте ей список из нескольких элементов.
#print(mutable_list)                                                            #визуальная проверка
mutable_list [2] = "Modified"                                                   #   - Измените элементы списка mutable_list.
print(mutable_list)                                                             #   - Выведите на экран измененный список mutable_list.


# Пример результата выполнения программы:
# Immutable tuple: (1, 2, 'a', 'b')
# Mutable list: [1, 2, 'a', 'b', 'Modified']