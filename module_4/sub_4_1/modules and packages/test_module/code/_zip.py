'''
zip()
Функция zip() в Python создает итератор, который соединяет элементы из двух и более списков. Полученный итератор можно использовать для быстрого и согласованного решения общих задач программирования, таких как создание словарей. Давайте познакомимся с логикой работы функции zip() и узнаем, как ее использовать для решения реальных проблем.
'''

#* Пример № 1
# numbers = [1, 2, 3]
# letters = ['a', 'b', 'c']

# zipped = zip(numbers, letters)


# print(type(zipped))
# print(zipped)

# Вывод -> <class 'zip'>
# Вывод -> <zip object at 0x000001E4A4A74AC0>

print(list(zipped))

# Вывод -> [(1, 'a'), (2, 'b'), (3, 'c')]

'''
Здесь используется zip(numbers, letters) для создания итератора, который создает кортежи в форме (x, y). В этом случае значения x берутся из numbers, а значения y берутся из letters.
'''


'''
Если мы работаем с последовательностями, такими как списки, кортежи или строки, то наши итерации гарантированно будут оцениваться слева направо.
'''
#* Пример № 2
# s1 = {2, 3, 1}
# s2 = {'b', 'a', 'c'}

# print(list(zip(s1, s2)))

# Вывод -> [(1, 'b'), (2, 'c'), (3, 'a')]

#* Вы также можете вызвать zip() без аргументов. В этом случае вы просто получите пустой итератор:

#* Пример № 3
# print(list(zip()))
